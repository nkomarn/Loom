--- a/net/minecraft/block/ComposterBlock.java
+++ b/net/minecraft/block/ComposterBlock.java
@@ -30,6 +30,7 @@
 import net.minecraft.world.BlockView;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldAccess;
+import org.bukkit.craftbukkit.inventory.CraftBlockInventoryHolder;
 
 public class ComposterBlock extends Block implements InventoryProvider {
 
@@ -269,7 +270,8 @@
     public SidedInventory getInventory(BlockState blockstate, WorldAccess worldaccess, BlockPos blockpos) {
         int i = (Integer) blockstate.get(ComposterBlock.LEVEL);
 
-        return (SidedInventory) (i == 8 ? new ComposterBlock.FullComposterInventory(blockstate, worldaccess, blockpos, new ItemStack(Items.BONE_MEAL)) : (i < 7 ? new ComposterBlock.ComposterInventory(blockstate, worldaccess, blockpos) : new ComposterBlock.DummyInventory()));
+        // CraftBukkit - empty generatoraccess, blockposition
+        return i == 8 ? new FullComposterInventory(blockstate, worldaccess, blockpos, new ItemStack(Items.BONE_MEAL)) : (i < 7 ? new ComposterInventory(blockstate, worldaccess, blockpos) : new DummyInventory(worldaccess, blockpos));
     }
 
     static class ComposterInventory extends SimpleInventory implements SidedInventory {
@@ -281,6 +283,7 @@
 
         public ComposterInventory(BlockState blockstate, WorldAccess worldaccess, BlockPos blockpos) {
             super(1);
+            this.bukkitOwner = new CraftBlockInventoryHolder(worldaccess, blockpos, this); // CraftBukkit
             this.state = blockstate;
             this.world = worldaccess;
             this.pos = blockpos;
@@ -328,6 +331,7 @@
             this.state = blockstate;
             this.world = worldaccess;
             this.pos = blockpos;
+            this.bukkitOwner = new CraftBlockInventoryHolder(worldaccess, blockpos, this); // CraftBukkit
         }
 
         public int getMaxCountPerStack() {
@@ -347,15 +351,22 @@
         }
 
         public void markDirty() {
-            ComposterBlock.emptyComposter(this.state, this.world, this.pos);
-            this.dirty = true;
+            // CraftBukkit start - allow putting items back (eg cancelled InventoryMoveItemEvent)
+            if (this.isEmpty()) {
+                ComposterBlock.emptyComposter(this.state, this.world, this.pos);
+                this.dirty = true;
+            } else {
+                this.world.setBlockState(this.pos, this.state, 3);
+            }
+            // CraftBukkit end
         }
     }
 
     static class DummyInventory extends SimpleInventory implements SidedInventory {
 
-        public DummyInventory() {
+        public DummyInventory(WorldAccess world, BlockPos blockPos) { // CraftBukkit
             super(0);
+            this.bukkitOwner = new CraftBlockInventoryHolder(world, blockPos, this); // CraftBukkit
         }
 
         public int[] getAvailableSlots(Direction direction) {
