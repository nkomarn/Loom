--- a/net/minecraft/item/MinecartItem.java
+++ b/net/minecraft/item/MinecartItem.java
@@ -14,6 +14,12 @@
 import net.minecraft.util.math.Direction;
 import net.minecraft.world.World;
 
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+// CraftBukkit end
+
 public class MinecartItem extends Item {
 
     private static final DispenserBehavior DISPENSER_BEHAVIOR = new ItemDispenserBehavior() {
@@ -51,14 +57,42 @@
                 }
             }
 
-            AbstractMinecartEntity abstractminecartentity = AbstractMinecartEntity.create(world, d0, d1 + d3, d2, ((MinecartItem) itemstack.getItem()).type);
+            // CraftBukkit start
+            ItemStack itemstack1 = itemstack.split(1);
+            org.bukkit.block.Block block2 = world.getCraftWorld().getBlockAt(blockpointer.getBlockPos().getX(), blockpointer.getBlockPos().getY(), blockpointer.getBlockPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+            BlockDispenseEvent event = new BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            if (!DispenserBlock.eventFired) {
+                Bukkit.getPluginManager().callEvent(event);
+            }
+
+            if (event.isCancelled()) {
+                itemstack.increment(1);
+                return itemstack;
+            }
+
+            if (!event.getItem().equals(craftItem)) {
+                itemstack.increment(1);
+                // Chain to handler for new item
+                ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                DispenserBehavior idispensebehavior = (DispenserBehavior) DispenserBlock.BEHAVIORS.get(eventStack.getItem());
+                if (idispensebehavior != DispenserBehavior.NOOP && idispensebehavior != this) {
+                    idispensebehavior.dispense(blockpointer, eventStack);
+                    return itemstack;
+                }
+            }
+
+            itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
+            AbstractMinecartEntity abstractminecartentity = AbstractMinecartEntity.create(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), ((MinecartItem) itemstack1.getItem()).type);
 
             if (itemstack.hasCustomName()) {
                 abstractminecartentity.setCustomName(itemstack.getName());
             }
 
-            world.spawnEntity(abstractminecartentity);
-            itemstack.decrement(1);
+            if (!world.spawnEntity(abstractminecartentity)) itemstack.increment(1);
+            // itemstack.decrement(1); // CraftBukkit - handled during event processing
+            // CraftBukkit end
             return itemstack;
         }
 
@@ -98,7 +132,12 @@
                     abstractminecartentity.setCustomName(itemstack.getName());
                 }
 
-                world.spawnEntity(abstractminecartentity);
+                // CraftBukkit start
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPlaceEvent(itemusagecontext, abstractminecartentity).isCancelled()) {
+                    return ActionResult.FAIL;
+                }
+                // CraftBukkit end
+                if (!world.spawnEntity(abstractminecartentity)) return ActionResult.PASS; // CraftBukkit
             }
 
             itemstack.decrement(1);
