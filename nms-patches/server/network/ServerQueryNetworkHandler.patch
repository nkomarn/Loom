--- a/net/minecraft/server/network/ServerQueryNetworkHandler.java
+++ b/net/minecraft/server/network/ServerQueryNetworkHandler.java
@@ -10,6 +10,21 @@
 import net.minecraft.text.Text;
 import net.minecraft.text.TranslatableText;
 
+// CraftBukkit start
+import net.minecraft.SharedConstants;
+import net.minecraft.server.ServerMetadata;
+import net.minecraft.text.LiteralText;
+
+import com.mojang.authlib.GameProfile;
+import java.net.InetSocketAddress;
+import java.util.Iterator;
+
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.util.CraftIconCache;
+import org.bukkit.entity.Player;
+
+// CraftBukkit end
+
 public class ServerQueryNetworkHandler implements ServerQueryPacketListener {
 
     private static final Text REQUEST_HANDLED = new TranslatableText("multiplayer.status.request_handled");
@@ -33,7 +48,95 @@
             this.connection.disconnect(ServerQueryNetworkHandler.REQUEST_HANDLED);
         } else {
             this.responseSent = true;
-            this.connection.send(new QueryResponseS2CPacket(this.server.getServerMetadata()));
+            // CraftBukkit start
+            // this.connection.send(new QueryResponseS2CPacket(this.server.getServerMetadata()));
+            final Object[] players = server.getPlayerManager().getPlayerList().toArray();
+            class ServerListPingEvent extends org.bukkit.event.server.ServerListPingEvent {
+
+                CraftIconCache icon = server.server.getServerIcon();
+
+                ServerListPingEvent() {
+                    super(((InetSocketAddress) connection.getAddress()).getAddress(), server.getServerMotd(), server.getPlayerManager().getMaxPlayerCount());
+                }
+
+                @Override
+                public void setServerIcon(org.bukkit.util.CachedServerIcon icon) {
+                    if (!(icon instanceof CraftIconCache)) {
+                        throw new IllegalArgumentException(icon + " was not created by " + org.bukkit.craftbukkit.CraftServer.class);
+                    }
+                    this.icon = (CraftIconCache) icon;
+                }
+
+                @Override
+                public Iterator<Player> iterator() throws UnsupportedOperationException {
+                    return new Iterator<Player>() {
+                        int i;
+                        int ret = Integer.MIN_VALUE;
+                        ServerPlayerEntity player;
+
+                        @Override
+                        public boolean hasNext() {
+                            if (player != null) {
+                                return true;
+                            }
+                            final Object[] currentPlayers = players;
+                            for (int length = currentPlayers.length, i = this.i; i < length; i++) {
+                                final ServerPlayerEntity player = (ServerPlayerEntity) currentPlayers[i];
+                                if (player != null) {
+                                    this.i = i + 1;
+                                    this.player = player;
+                                    return true;
+                                }
+                            }
+                            return false;
+                        }
+
+                        @Override
+                        public Player next() {
+                            if (!hasNext()) {
+                                throw new java.util.NoSuchElementException();
+                            }
+                            final ServerPlayerEntity player = this.player;
+                            this.player = null;
+                            this.ret = this.i - 1;
+                            return player.getBukkitEntity();
+                        }
+
+                        @Override
+                        public void remove() {
+                            final Object[] currentPlayers = players;
+                            final int i = this.ret;
+                            if (i < 0 || currentPlayers[i] == null) {
+                                throw new IllegalStateException();
+                            }
+                            currentPlayers[i] = null;
+                        }
+                    };
+                }
+            }
+
+            ServerListPingEvent event = new ServerListPingEvent();
+            Bukkit.getPluginManager().callEvent(event);
+
+            java.util.List<GameProfile> profiles = new java.util.ArrayList<GameProfile>(players.length);
+            for (Object player : players) {
+                if (player != null) {
+                    profiles.add(((ServerPlayerEntity) player).getGameProfile());
+                }
+            }
+
+            ServerMetadata.Players playerSample = new ServerMetadata.Players(event.getMaxPlayers(), profiles.size());
+            playerSample.setSample(profiles.toArray(new GameProfile[profiles.size()]));
+
+            ServerMetadata ping = new ServerMetadata();
+            ping.setFavicon(event.icon.value);
+            ping.setDescription(new LiteralText(event.getMotd()));
+            ping.setPlayers(playerSample);
+            int version = SharedConstants.getGameVersion().getProtocolVersion();
+            ping.setVersion(new ServerMetadata.Version(server.getServerModName() + " " + server.getVersion(), version));
+
+            this.connection.send(new QueryResponseS2CPacket(ping));
+            // CraftBukkit end
         }
     }
 
