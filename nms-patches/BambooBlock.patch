--- a/net/minecraft/block/BambooBlock.java
+++ b/net/minecraft/block/BambooBlock.java
@@ -2,6 +2,7 @@
 
 import java.util.Random;
 import javax.annotation.Nullable;
+
 import net.minecraft.block.enums.BambooLeaves;
 import net.minecraft.entity.ai.pathing.NavigationType;
 import net.minecraft.entity.player.PlayerEntity;
@@ -22,6 +23,7 @@
 import net.minecraft.world.World;
 import net.minecraft.world.WorldAccess;
 import net.minecraft.world.WorldView;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BambooBlock extends Block implements Fertilizable {
 
@@ -172,14 +174,18 @@
         BlockPos blockpos1 = blockpos.down(2);
         BlockState blockstate2 = world.getBlockState(blockpos1);
         BambooLeaves bambooleaves = BambooLeaves.NONE;
+        boolean shouldUpdateOthers = false; // CraftBukkit
 
         if (i >= 1) {
             if (blockstate1.isOf(Blocks.BAMBOO) && blockstate1.get(BambooBlock.LEAVES) != BambooLeaves.NONE) {
                 if (blockstate1.isOf(Blocks.BAMBOO) && blockstate1.get(BambooBlock.LEAVES) != BambooLeaves.NONE) {
                     bambooleaves = BambooLeaves.LARGE;
                     if (blockstate2.isOf(Blocks.BAMBOO)) {
-                        world.setBlockState(blockpos.down(), (BlockState) blockstate1.with(BambooBlock.LEAVES, BambooLeaves.SMALL), 3);
-                        world.setBlockState(blockpos1, (BlockState) blockstate2.with(BambooBlock.LEAVES, BambooLeaves.NONE), 3);
+                        // CraftBukkit start - moved down
+                        // world.setTypeAndData(blockposition.down(), (IBlockData) iblockdata1.set(BlockBamboo.e, BlockPropertyBambooSize.SMALL), 3);
+                        // world.setTypeAndData(blockposition1, (IBlockData) iblockdata2.set(BlockBamboo.e, BlockPropertyBambooSize.NONE), 3);
+                        shouldUpdateOthers = true;
+                        // CraftBukkit end
                     }
                 }
             } else {
@@ -190,7 +196,14 @@
         int j = (Integer) blockstate.get(BambooBlock.AGE) != 1 && !blockstate2.isOf(Blocks.BAMBOO) ? 0 : 1;
         int k = (i < 11 || random.nextFloat() >= 0.25F) && i != 15 ? 0 : 1;
 
-        world.setBlockState(blockpos.up(), (BlockState) ((BlockState) ((BlockState) this.getDefaultState().with(BambooBlock.AGE, j)).with(BambooBlock.LEAVES, bambooleaves)).with(BambooBlock.STAGE, k), 3);
+        // CraftBukkit start
+        if (CraftEventFactory.handleBlockSpreadEvent(world, blockpos, blockpos.up(), this.getDefaultState().with(AGE, j).with(LEAVES, bambooleaves).with(STAGE, k), 3)) {
+            if (shouldUpdateOthers) {
+                world.setBlockState(blockpos.down(), (BlockState) blockstate1.with(BambooBlock.LEAVES, BambooLeaves.SMALL), 3);
+                world.setBlockState(blockpos1, blockstate2.with(BambooBlock.LEAVES, BambooLeaves.NONE), 3);
+            }
+        }
+        // CraftBukkit end
     }
 
     protected int countBambooAbove(BlockView blockview, BlockPos blockpos) {
