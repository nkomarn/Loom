--- a/net/minecraft/text/TextColor.java
+++ b/net/minecraft/text/TextColor.java
@@ -11,7 +11,7 @@
 public final class TextColor {
 
     private static final Map<Formatting, TextColor> FORMATTING_TO_COLOR = (Map) Stream.of(Formatting.values()).filter(Formatting::isColor).collect(ImmutableMap.toImmutableMap(Function.identity(), (formatting) -> {
-        return new TextColor(formatting.getColorValue(), formatting.getName());
+        return new TextColor(formatting.getColorValue(), formatting.getName(), formatting); // CraftBukkit
     }));
     private static final Map<String, TextColor> BY_NAME = (Map) TextColor.FORMATTING_TO_COLOR.values().stream().collect(ImmutableMap.toImmutableMap((textcolor) -> {
         return textcolor.name;
@@ -19,16 +19,22 @@
     private final int rgb;
     @Nullable
     private final String name;
+    // CraftBukkit start
+    @Nullable
+    public final Formatting formatting;
 
-    private TextColor(int i, String s) {
+    private TextColor(int i, String s, Formatting formatting) {
         this.rgb = i;
         this.name = s;
+        this.formatting = formatting;
     }
 
     private TextColor(int i) {
         this.rgb = i;
         this.name = null;
+        this.formatting = null;
     }
+    // CraftBukkit end
 
     public String getName() {
         return this.name != null ? this.name : this.getHexCode();
