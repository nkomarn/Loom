--- a/net/minecraft/entity/decoration/ItemFrameEntity.java
+++ b/net/minecraft/entity/decoration/ItemFrameEntity.java
@@ -78,16 +78,25 @@
 
     protected void updateAttachmentPosition() {
         if (this.facing != null) {
+            this.setBoundingBox(this.calculateBoundingBox(this, this.getBlockPos(), this.facing, this.getWidthPixels(), this.getHeightPixels()));
+        }
+    }
+
+    // CraftBukkit start - break out BB calc into own method [Probably some another useless change.. >:D ]
+    public static Box calculateBoundingBox(@Nullable Entity entity, BlockPos blockPosition, Direction direction, int width, int height) {
+        {
             double d0 = 0.46875D;
-            double d1 = (double) this.attachmentPos.getX() + 0.5D - (double) this.facing.getOffsetX() * 0.46875D;
-            double d2 = (double) this.attachmentPos.getY() + 0.5D - (double) this.facing.getOffsetY() * 0.46875D;
-            double d3 = (double) this.attachmentPos.getZ() + 0.5D - (double) this.facing.getOffsetZ() * 0.46875D;
-
-            this.setPos(d1, d2, d3);
-            double d4 = (double) this.getWidthPixels();
-            double d5 = (double) this.getHeightPixels();
-            double d6 = (double) this.getWidthPixels();
-            Direction.Axis direction_axis = this.facing.getAxis();
+            double d1 = (double) blockPosition.getX() + 0.5D - (double) direction.getOffsetX() * 0.46875D;
+            double d2 = (double) blockPosition.getY() + 0.5D - (double) direction.getOffsetY() * 0.46875D;
+            double d3 = (double) blockPosition.getZ() + 0.5D - (double) direction.getOffsetZ() * 0.46875D;
+
+            if (entity != null) {
+                // entity.setPos(); entity.setPositionRaw(d1, d2, d3);
+            }
+            double d4 = (double) width;
+            double d5 = (double) height;
+            double d6 = (double) width;
+            Direction.Axis direction_axis = direction.getAxis();
 
             switch (direction_axis) {
                 case X:
@@ -103,9 +112,10 @@
             d4 /= 32.0D;
             d5 /= 32.0D;
             d6 /= 32.0D;
-            this.setBoundingBox(new Box(d1 - d4, d2 - d5, d3 - d6, d1 + d4, d2 + d5, d3 + d6));
+            return new Box(d1 - d4, d2 - d5, d3 - d6, d1 + d4, d2 + d5, d3 + d6);
         }
     }
+    // CraftBukkit end
 
     public boolean canStayAttached() {
         if (this.fixed) {
@@ -149,6 +159,11 @@
             return false;
         } else if (!damagesource.isExplosive() && !this.getHeldItemStack().isEmpty()) {
             if (!this.world.isClient) {
+                // CraftBukkit start - fire EntityDamageEvent
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.handleNonLivingEntityDamageEvent(this, damagesource, f, false) || this.removed) {
+                    return true;
+                }
+                // CraftBukkit end
                 this.dropHeldStack(damagesource.getAttacker(), false);
                 this.playSound(SoundEvents.ENTITY_ITEM_FRAME_REMOVE_ITEM, 1.0F, 1.0F);
             }
@@ -232,6 +247,10 @@
     }
 
     public void setHeldItemStack(ItemStack itemstack, boolean flag) {
+        this.setHeldItemStack(itemstack, flag, true);
+    }
+
+    public void setHeldItemStack(ItemStack itemstack, boolean flag, boolean playSound) {
         if (!itemstack.isEmpty()) {
             itemstack = itemstack.copy();
             itemstack.setCount(1);
@@ -239,7 +258,7 @@
         }
 
         this.getDataTracker().set(ItemFrameEntity.ITEM_STACK, itemstack);
-        if (!itemstack.isEmpty()) {
+        if (!itemstack.isEmpty() && playSound) { // CraftBukkit
             this.playSound(SoundEvents.ENTITY_ITEM_FRAME_ADD_ITEM, 1.0F, 1.0F);
         }
 
