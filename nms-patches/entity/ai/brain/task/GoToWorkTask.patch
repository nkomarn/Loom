--- a/net/minecraft/entity/ai/brain/task/GoToWorkTask.java
+++ b/net/minecraft/entity/ai/brain/task/GoToWorkTask.java
@@ -14,6 +14,12 @@
 import net.minecraft.util.registry.Registry;
 import net.minecraft.village.VillagerProfession;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftVillager;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.VillagerCareerChangeEvent;
+// CraftBukkit end
+
 public class GoToWorkTask extends Task<VillagerEntity> {
 
     public GoToWorkTask() {
@@ -30,7 +36,7 @@
         GlobalPos globalpos = (GlobalPos) villagerentity.getBrain().getOptionalMemory(MemoryModuleType.POTENTIAL_JOB_SITE).get();
 
         villagerentity.getBrain().forget(MemoryModuleType.POTENTIAL_JOB_SITE);
-        villagerentity.getBrain().remember(MemoryModuleType.JOB_SITE, (Object) globalpos);
+        villagerentity.getBrain().remember(MemoryModuleType.JOB_SITE, globalpos); // CraftBukkit - decompile error
         if (villagerentity.getVillagerData().getProfession() == VillagerProfession.NONE) {
             MinecraftServer minecraftserver = serverworld.getServer();
 
@@ -41,17 +47,18 @@
                     return villagerprofession.getWorkStation() == pointofinteresttype;
                 }).findFirst();
             }).ifPresent((villagerprofession) -> {
-                villagerentity.setVillagerData(villagerentity.getVillagerData().withProfession(villagerprofession));
+                // CraftBukkit start - Fire VillagerCareerChangeEvent where Villager gets employed
+                VillagerCareerChangeEvent event = CraftEventFactory.callVillagerCareerChangeEvent(villagerentity, CraftVillager.nmsToBukkitProfession(villagerprofession), VillagerCareerChangeEvent.ChangeReason.EMPLOYED);
+                if (event.isCancelled()) {
+                    return;
+                }
+
+                villagerentity.setVillagerData(villagerentity.getVillagerData().withProfession(CraftVillager.bukkitToNmsProfession(event.getProfession())));
+                // CraftBukkit end
                 villagerentity.reinitializeBrain(serverworld);
             });
         }
     }
 
-    protected boolean shouldRun(ServerWorld serverworld, LivingEntity livingentity) {
-        return this.shouldRun(serverworld, (VillagerEntity) livingentity);
-    }
-
-    protected void run(ServerWorld serverworld, LivingEntity livingentity, long i) {
-        this.run(serverworld, (VillagerEntity) livingentity, i);
-    }
+    // Loom - decompile errors
 }
