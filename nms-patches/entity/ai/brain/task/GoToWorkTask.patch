--- a/net/minecraft/entity/ai/brain/task/GoToWorkTask.java
+++ b/net/minecraft/entity/ai/brain/task/GoToWorkTask.java
@@ -1,7 +1,9 @@
 package net.minecraft.entity.ai.brain.task;
 
 import com.google.common.collect.ImmutableMap;
+
 import java.util.Optional;
+
 import net.minecraft.entity.LivingEntity;
 import net.minecraft.entity.ai.brain.MemoryModuleState;
 import net.minecraft.entity.ai.brain.MemoryModuleType;
@@ -30,7 +32,7 @@
         GlobalPos globalpos = (GlobalPos) villagerentity.getBrain().getOptionalMemory(MemoryModuleType.POTENTIAL_JOB_SITE).get();
 
         villagerentity.getBrain().forget(MemoryModuleType.POTENTIAL_JOB_SITE);
-        villagerentity.getBrain().remember(MemoryModuleType.JOB_SITE, (Object) globalpos);
+        villagerentity.getBrain().remember(MemoryModuleType.JOB_SITE, globalpos); // CraftBukkit - decompile error
         if (villagerentity.getVillagerData().getProfession() == VillagerProfession.NONE) {
             MinecraftServer minecraftserver = serverworld.getServer();
 
@@ -41,12 +43,20 @@
                     return villagerprofession.getWorkStation() == pointofinteresttype;
                 }).findFirst();
             }).ifPresent((villagerprofession) -> {
-                villagerentity.setVillagerData(villagerentity.getVillagerData().withProfession(villagerprofession));
+                // CraftBukkit start - Fire VillagerCareerChangeEvent where Villager gets employed
+                VillagerCareerChangeEvent event = CraftEventFactory.callVillagerCareerChangeEvent(villagerentity, CraftVillager.nmsToBukkitProfession(villagerprofession), VillagerCareerChangeEvent.ChangeReason.EMPLOYED);
+                if (event.isCancelled()) {
+                    return;
+                }
+
+                villagerentity.setVillagerData(villagerentity.getVillagerData().withProfession(CraftVillager.bukkitToNmsProfession(event.getProfession())));
+                // CraftBukkit end
                 villagerentity.reinitializeBrain(serverworld);
             });
         }
     }
 
+    /*
     protected boolean shouldRun(ServerWorld serverworld, LivingEntity livingentity) {
         return this.shouldRun(serverworld, (VillagerEntity) livingentity);
     }
@@ -54,4 +64,5 @@
     protected void run(ServerWorld serverworld, LivingEntity livingentity, long i) {
         this.run(serverworld, (VillagerEntity) livingentity, i);
     }
+    */ // Loom - decompile error
 }
