--- a/net/minecraft/entity/ai/brain/task/LookTargetUtil.java
+++ b/net/minecraft/entity/ai/brain/task/LookTargetUtil.java
@@ -56,7 +56,7 @@
     }
 
     public static void lookAt(LivingEntity livingentity, LivingEntity livingentity1) {
-        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (Object) (new EntityLookTarget(livingentity1, true)));
+        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (new EntityLookTarget(livingentity1, true))); // CraftBukkit - decompile error
     }
 
     private static void walkTowardsEachOther(LivingEntity livingentity, LivingEntity livingentity1, float f) {
@@ -69,18 +69,19 @@
     public static void walkTowards(LivingEntity livingentity, Entity entity, float f, int i) {
         WalkTarget walktarget = new WalkTarget(new EntityLookTarget(entity, false), f, i);
 
-        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (Object) (new EntityLookTarget(entity, true)));
-        livingentity.getBrain().remember(MemoryModuleType.WALK_TARGET, (Object) walktarget);
+        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (new EntityLookTarget(entity, true))); // CraftBukkit - decompile error
+        livingentity.getBrain().remember(MemoryModuleType.WALK_TARGET, walktarget); // CraftBukkit - decompile error
     }
 
     public static void walkTowards(LivingEntity livingentity, BlockPos blockpos, float f, int i) {
         WalkTarget walktarget = new WalkTarget(new BlockPosLookTarget(blockpos), f, i);
 
-        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (Object) (new BlockPosLookTarget(blockpos)));
-        livingentity.getBrain().remember(MemoryModuleType.WALK_TARGET, (Object) walktarget);
+        livingentity.getBrain().remember(MemoryModuleType.LOOK_TARGET, (new BlockPosLookTarget(blockpos))); // CraftBukkit - decompile error
+        livingentity.getBrain().remember(MemoryModuleType.WALK_TARGET, walktarget); // CraftBukkit - decompile error
     }
 
     public static void give(LivingEntity livingentity, ItemStack itemstack, Vec3d vec3d) {
+        if (itemstack.isEmpty()) return; // CraftBukkit - SPIGOT-4940: no empty loot
         double d0 = livingentity.getEyeY() - 0.30000001192092896D;
         ItemEntity itementity = new ItemEntity(livingentity.world, livingentity.getX(), d0, livingentity.getZ(), itemstack);
         float f = 0.3F;
@@ -94,7 +95,7 @@
 
     public static ChunkSectionPos getPosClosestToOccupiedPointOfInterest(ServerWorld serverworld, ChunkSectionPos chunksectionpos, int i) {
         int j = serverworld.getOccupiedPointOfInterestDistance(chunksectionpos);
-        Stream stream = ChunkSectionPos.stream(chunksectionpos, i).filter((chunksectionpos1) -> {
+        Stream<ChunkSectionPos> stream = ChunkSectionPos.stream(chunksectionpos, i).filter((chunksectionpos1) -> { // CraftBukkit - decompile error
             return serverworld.getOccupiedPointOfInterestDistance(chunksectionpos1) < j;
         });
 
