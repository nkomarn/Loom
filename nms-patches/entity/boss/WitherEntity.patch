--- a/net/minecraft/entity/boss/WitherEntity.java
+++ b/net/minecraft/entity/boss/WitherEntity.java
@@ -49,6 +49,18 @@
 import net.minecraft.world.World;
 import net.minecraft.world.explosion.Explosion;
 
+// CraftBukkit start
+import net.minecraft.block.Blocks;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.world.ServerWorld;
+import net.minecraft.network.packet.s2c.play.WorldEventS2CPacket;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+// CraftBukkit end
+
 public class WitherEntity extends HostileEntity implements RangedAttackMob {
 
     private static final TrackedData<Integer> TRACKED_ENTITY_ID_1 = DataTracker.registerData(WitherEntity.class, TrackedDataHandlerRegistry.INTEGER);
@@ -63,7 +75,7 @@
     private final int[] field_7091 = new int[2];
     private final int[] field_7092 = new int[2];
     private int field_7082;
-    private final ServerBossBar bossBar;
+    public final ServerBossBar bossBar; // Loom - public access
     private static final Predicate<LivingEntity> CAN_ATTACK_PREDICATE = (livingentity) -> {
         return livingentity.getGroup() != EntityGroup.UNDEAD && livingentity.isMobOrPlayer();
     };
@@ -221,16 +233,40 @@
             i = this.getInvulnerableTimer() - 1;
             if (i <= 0) {
                 Explosion.DestructionType explosion_destructiontype = this.world.getGameRules().getBoolean(GameRules.DO_MOB_GRIEFING) ? Explosion.DestructionType.DESTROY : Explosion.DestructionType.NONE;
+                // CraftBukkit start
+                // this.world.createExplosion(this, this.getX(), this.getEyeY(), this.getZ(), 7.0F, false, explosion_destructiontype);
+                ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 7.0F, false);
+                Bukkit.getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    this.world.createExplosion(this, this.getX(), this.getEyeY(), this.getZ(), event.getRadius(), event.getFire(), explosion_destructiontype);
+                }
+                // CraftBukkit end
 
-                this.world.createExplosion(this, this.getX(), this.getEyeY(), this.getZ(), 7.0F, false, explosion_destructiontype);
                 if (!this.isSilent()) {
-                    this.world.syncGlobalEvent(1023, this.getBlockPos(), 0);
+                    // CraftBukkit start - Use relative location for far away sounds
+                    // this.world.syncGlobalEvent(1023, this.getBlockPos(), 0);
+                    int viewDistance = ((ServerWorld) this.world).getCraftServer().getViewDistance() * 16;
+                    for (ServerPlayerEntity player : (List<ServerPlayerEntity>) MinecraftServer.getServer().getPlayerManager().getPlayerList()) {
+                        double deltaX = this.getX() - player.getX();
+                        double deltaZ = this.getZ() - player.getZ();
+                        double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+                        if (distanceSquared > viewDistance * viewDistance) {
+                            double deltaLength = Math.sqrt(distanceSquared);
+                            double relativeX = player.getX() + (deltaX / deltaLength) * viewDistance;
+                            double relativeZ = player.getZ() + (deltaZ / deltaLength) * viewDistance;
+                            player.networkHandler.sendPacket(new WorldEventS2CPacket(1023, new BlockPos((int) relativeX, (int) this.getY(), (int) relativeZ), 0, true));
+                        } else {
+                            player.networkHandler.sendPacket(new WorldEventS2CPacket(1023, this.getBlockPos(), 0, true));
+                        }
+                    }
+                    // CraftBukkit end
                 }
             }
 
             this.setInvulTimer(i);
             if (this.age % 10 == 0) {
-                this.heal(10.0F);
+                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
             }
 
         } else {
@@ -282,9 +318,11 @@
                             if (livingentity != this && livingentity.isAlive() && this.canSee(livingentity)) {
                                 if (livingentity instanceof PlayerEntity) {
                                     if (!((PlayerEntity) livingentity).abilities.invulnerable) {
+                                        if (CraftEventFactory.callEntityTargetLivingEvent(this, livingentity, EntityTargetEvent.TargetReason.CLOSEST_PLAYER).isCancelled()) continue; // CraftBukkit
                                         this.setTrackedEntityId(i, livingentity.getEntityId());
                                     }
                                 } else {
+                                    if (CraftEventFactory.callEntityTargetLivingEvent(this, livingentity, EntityTargetEvent.TargetReason.CLOSEST_ENTITY).isCancelled()) continue; // CraftBukkit
                                     this.setTrackedEntityId(i, livingentity.getEntityId());
                                 }
                                 break;
@@ -320,6 +358,11 @@
                                 BlockState blockstate = this.world.getBlockState(blockpos);
 
                                 if (canDestroy(blockstate)) {
+                                    // CraftBukkit start
+                                    if (CraftEventFactory.callEntityChangeBlockEvent(this, blockpos, Blocks.AIR.getDefaultState()).isCancelled()) {
+                                        continue;
+                                    }
+                                    // CraftBukkit end
                                     flag = this.world.breakBlock(blockpos, true, this) || flag;
                                 }
                             }
@@ -333,7 +376,7 @@
             }
 
             if (this.age % 20 == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
             }
 
             this.bossBar.setPercent(this.getHealth() / this.getMaxHealth());
