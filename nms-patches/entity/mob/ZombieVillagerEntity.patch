--- a/net/minecraft/entity/mob/ZombieVillagerEntity.java
+++ b/net/minecraft/entity/mob/ZombieVillagerEntity.java
@@ -45,15 +45,23 @@
 import net.minecraft.world.WorldAccess;
 import org.apache.logging.log4j.Logger;
 
+// CraftBukkit start
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.ZombieVillager;
+import org.bukkit.event.entity.EntityTransformEvent;
+// CraftBukkit end
+
 public class ZombieVillagerEntity extends ZombieEntity implements VillagerDataContainer {
 
-    private static final TrackedData<Boolean> CONVERTING = DataTracker.registerData(ZombieVillagerEntity.class, TrackedDataHandlerRegistry.BOOLEAN);
+    public static final TrackedData<Boolean> CONVERTING = DataTracker.registerData(ZombieVillagerEntity.class, TrackedDataHandlerRegistry.BOOLEAN); // Loom - public access
     private static final TrackedData<VillagerData> VILLAGER_DATA = DataTracker.registerData(ZombieVillagerEntity.class, TrackedDataHandlerRegistry.VILLAGER_DATA);
-    private int conversionTimer;
-    private UUID converter;
+    public int conversionTimer; // Loom - public access
+    public UUID converter; // Loom - public access
     private Tag gossipData;
     private CompoundTag offerData;
     private int xp;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public ZombieVillagerEntity(EntityType<? extends ZombieVillagerEntity> entitytype, World world) {
         super(entitytype, world);
@@ -68,7 +76,7 @@
 
     public void writeCustomDataToTag(CompoundTag compoundtag) {
         super.writeCustomDataToTag(compoundtag);
-        DataResult dataresult = VillagerData.CODEC.encodeStart(NbtOps.INSTANCE, this.getVillagerData());
+        DataResult<Tag> dataresult = VillagerData.CODEC.encodeStart(NbtOps.INSTANCE, this.getVillagerData());
         Logger logger = ZombieVillagerEntity.LOGGER;
 
         logger.getClass();
@@ -123,6 +131,11 @@
         if (!this.world.isClient && this.isAlive() && this.isConverting()) {
             int i = this.getConversionRate();
 
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
+
             this.conversionTimer -= i;
             if (this.conversionTimer <= 0) {
                 this.finishConversion((ServerWorld) this.world);
@@ -130,6 +143,7 @@
         }
 
         super.tick();
+        this.lastTick = MinecraftServer.currentTick; // CraftBukkit
     }
 
     public ActionResult interactMob(PlayerEntity playerentity, Hand hand) {
@@ -166,12 +180,15 @@
         return (Boolean) this.getDataTracker().get(ZombieVillagerEntity.CONVERTING);
     }
 
-    private void setConverting(@Nullable UUID uuid, int i) {
+    public void setConverting(@Nullable UUID uuid, int i) { // Loom - public access
         this.converter = uuid;
         this.conversionTimer = i;
         this.getDataTracker().set(ZombieVillagerEntity.CONVERTING, true);
-        this.removeStatusEffect(StatusEffects.WEAKNESS);
-        this.addStatusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, i, Math.min(this.world.getDifficulty().getId() - 1, 0)));
+        // CraftBukkit start
+        this.persistent = true; // CraftBukkit - SPIGOT-4684 update persistence
+        this.removeStatusEffect(StatusEffects.WEAKNESS, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        this.addStatusEffect(new StatusEffectInstance(StatusEffects.STRENGTH, i, Math.min(this.world.getDifficulty().getId() - 1, 0)), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        // CraftBukkit end
         this.world.sendEntityStatus(this, (byte) 16);
     }
 
@@ -213,7 +230,7 @@
             villagerentity.setBreedingAge(-24000);
         }
 
-        this.remove();
+        // this.remove(); // CraftBukkit - moved down
         villagerentity.setAiDisabled(this.isAiDisabled());
         if (this.hasCustomName()) {
             villagerentity.setCustomName(this.getCustomName());
@@ -225,7 +242,14 @@
         }
 
         villagerentity.setInvulnerable(this.isInvulnerable());
-        serverworld.spawnEntity(villagerentity);
+        // CraftBukkit start
+        if (CraftEventFactory.callEntityTransformEvent(this, villagerentity, EntityTransformEvent.TransformReason.CURED).isCancelled()) {
+            ((ZombieVillager) getBukkitEntity()).setConversionTime(-1); // SPIGOT-5208: End conversion to stop event spam
+            return;
+        }
+        this.remove(); // CraftBukkit - from above
+        world.spawnEntity(villagerentity, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CURED); // CraftBukkit - add SpawnReason
+        // CraftBukkit end;
         if (this.converter != null) {
             PlayerEntity playerentity = serverworld.getPlayerByUuid(this.converter);
 
@@ -235,7 +259,7 @@
             }
         }
 
-        villagerentity.addStatusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 200, 0));
+        villagerentity.addStatusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION); // CraftBukkit
         if (!this.isSilent()) {
             serverworld.syncWorldEvent((PlayerEntity) null, 1027, this.getBlockPos(), 0);
         }
