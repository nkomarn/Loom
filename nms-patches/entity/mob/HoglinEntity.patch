--- a/net/minecraft/entity/mob/HoglinEntity.java
+++ b/net/minecraft/entity/mob/HoglinEntity.java
@@ -46,8 +46,8 @@
 
     private static final TrackedData<Boolean> BABY = DataTracker.registerData(HoglinEntity.class, TrackedDataHandlerRegistry.BOOLEAN);
     private int movementCooldownTicks;
-    private int timeInOverworld = 0;
-    private boolean cannotBeHunted = false;
+    public int timeInOverworld = 0; // Loom - public access
+    public boolean cannotBeHunted = false; // Loom - public access
     protected static final ImmutableList<? extends SensorType<? extends Sensor<? super HoglinEntity>>> SENSOR_TYPES = ImmutableList.of(SensorType.NEAREST_LIVING_ENTITIES, SensorType.NEAREST_PLAYERS, SensorType.NEAREST_ADULT, SensorType.HOGLIN_SPECIFIC_SENSOR);
     protected static final ImmutableList<? extends MemoryModuleType<?>> MEMORY_MODULE_TYPES = ImmutableList.of(MemoryModuleType.BREED_TARGET, MemoryModuleType.MOBS, MemoryModuleType.VISIBLE_MOBS, MemoryModuleType.NEAREST_VISIBLE_PLAYER, MemoryModuleType.NEAREST_VISIBLE_TARGETABLE_PLAYER, MemoryModuleType.LOOK_TARGET, MemoryModuleType.WALK_TARGET, MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE, MemoryModuleType.PATH, MemoryModuleType.ATTACK_TARGET, MemoryModuleType.ATTACK_COOLING_DOWN, MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLIN, MemoryModuleType.AVOID_TARGET, MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT, MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT, MemoryModuleType.NEAREST_VISIBLE_ADULT_HOGLINS, MemoryModuleType.NEAREST_VISIBLE_ADULT, MemoryModuleType.NEAREST_REPELLENT, MemoryModuleType.PACIFIED);
 
@@ -106,7 +106,7 @@
     }
 
     public Brain<HoglinEntity> getBrain() {
-        return super.getBrain();
+        return (Brain<HoglinEntity>) super.getBrain(); // Loom - decompile error
     }
 
     protected void mobTick() {
@@ -231,7 +231,7 @@
         this.getDataTracker().set(HoglinEntity.BABY, flag);
     }
 
-    private boolean isImmuneToZombification() {
+    public boolean isImmuneToZombification() { // Loom - public access
         return (Boolean) this.getDataTracker().get(HoglinEntity.BABY);
     }
 
@@ -267,7 +267,7 @@
     }
 
     protected SoundEvent getAmbientSound() {
-        return this.world.isClient ? null : (SoundEvent) HoglinBrain.method_30083(this).orElse((Object) null);
+        return this.world.isClient ? null : (SoundEvent) HoglinBrain.method_30083(this).orElse(null); // Loom - decompile error
     }
 
     protected SoundEvent getHurtSound(DamageSource damagesource) {
