--- a/net/minecraft/entity/mob/PiglinEntity.java
+++ b/net/minecraft/entity/mob/PiglinEntity.java
@@ -63,9 +63,9 @@
     private static final TrackedData<Boolean> dancing = DataTracker.registerData(PiglinEntity.class, TrackedDataHandlerRegistry.BOOLEAN);
     private static final UUID BABY_SPEED_BOOST_ID = UUID.fromString("766bfa64-11f3-11ea-8d71-362b9e155667");
     private static final EntityAttributeModifier BABY_SPEED_BOOST = new EntityAttributeModifier(PiglinEntity.BABY_SPEED_BOOST_ID, "Baby speed boost", 0.20000000298023224D, EntityAttributeModifier.Operation.MULTIPLY_BASE);
-    private int conversionTicks = 0;
+    public int conversionTicks = 0; // Loom - public access
     private final SimpleInventory inventory = new SimpleInventory(8);
-    private boolean cannotHunt = false;
+    public boolean cannotHunt = false; // Loom - public access
     protected static final ImmutableList<SensorType<? extends Sensor<? super PiglinEntity>>> SENSOR_TYPES = ImmutableList.of(SensorType.NEAREST_LIVING_ENTITIES, SensorType.NEAREST_PLAYERS, SensorType.NEAREST_ITEMS, SensorType.HURT_BY, SensorType.INTERACTABLE_DOORS, SensorType.PIGLIN_SPECIFIC_SENSOR);
     protected static final ImmutableList<MemoryModuleType<?>> MEMORY_MODULE_TYPES = ImmutableList.of(MemoryModuleType.LOOK_TARGET, MemoryModuleType.INTERACTABLE_DOORS, MemoryModuleType.OPENED_DOORS, MemoryModuleType.MOBS, MemoryModuleType.VISIBLE_MOBS, MemoryModuleType.NEAREST_VISIBLE_PLAYER, MemoryModuleType.NEAREST_VISIBLE_TARGETABLE_PLAYER, MemoryModuleType.NEAREST_VISIBLE_ADULT_PIGLINS, MemoryModuleType.NEAREST_ADULT_PIGLINS, MemoryModuleType.NEAREST_VISIBLE_WANTED_ITEM, MemoryModuleType.HURT_BY, MemoryModuleType.HURT_BY_ENTITY, MemoryModuleType.WALK_TARGET, MemoryModuleType.CANT_REACH_WALK_TARGET_SINCE, MemoryModuleType.ATTACK_TARGET, MemoryModuleType.ATTACK_COOLING_DOWN, MemoryModuleType.INTERACTION_TARGET, MemoryModuleType.PATH, MemoryModuleType.ANGRY_AT, MemoryModuleType.UNIVERSAL_ANGER, MemoryModuleType.AVOID_TARGET, MemoryModuleType.ADMIRING_ITEM, MemoryModuleType.ADMIRING_DISABLED, MemoryModuleType.CELEBRATE_LOCATION, MemoryModuleType.DANCING, MemoryModuleType.HUNTED_RECENTLY, MemoryModuleType.NEAREST_VISIBLE_BABY_HOGLIN, MemoryModuleType.NEAREST_VISIBLE_BABY_PIGLIN, MemoryModuleType.NEAREST_VISIBLE_NEMESIS, MemoryModuleType.NEAREST_VISIBLE_ZOMBIFIED, MemoryModuleType.RIDE_TARGET, MemoryModuleType.VISIBLE_ADULT_PIGLIN_COUNT, MemoryModuleType.VISIBLE_ADULT_HOGLIN_COUNT, MemoryModuleType.NEAREST_VISIBLE_HUNTABLE_HOGLIN, MemoryModuleType.NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD, MemoryModuleType.NEAREST_PLAYER_HOLDING_WANTED_ITEM, MemoryModuleType.ATE_RECENTLY, MemoryModuleType.NEAREST_REPELLENT);
 
@@ -192,7 +192,7 @@
     }
 
     public Brain<PiglinEntity> getBrain() {
-        return super.getBrain();
+        return (Brain<PiglinEntity>) super.getBrain(); // Loom - decompile error
     }
 
     public ActionResult interactMob(PlayerEntity playerentity, Hand hand) {
@@ -246,7 +246,7 @@
         this.getDataTracker().set(PiglinEntity.IMMUNE_TO_ZOMBIFICATION, flag);
     }
 
-    private boolean isImmuneToZombification() {
+    public boolean isImmuneToZombification() { // Loom - public access
         return (Boolean) this.getDataTracker().get(PiglinEntity.IMMUNE_TO_ZOMBIFICATION);
     }
 
@@ -294,7 +294,7 @@
 
     @Nullable
     public LivingEntity getTarget() {
-        return (LivingEntity) this.brain.getOptionalMemory(MemoryModuleType.ATTACK_TARGET).orElse((Object) null);
+        return (LivingEntity) this.brain.getOptionalMemory(MemoryModuleType.ATTACK_TARGET).orElse(null); // Loom - decompile error
     }
 
     private ItemStack makeInitialWeapon() {
@@ -411,7 +411,7 @@
     }
 
     protected SoundEvent getAmbientSound() {
-        return this.world.isClient ? null : (SoundEvent) PiglinBrain.method_30091(this).orElse((Object) null);
+        return this.world.isClient ? null : (SoundEvent) PiglinBrain.method_30091(this).orElse(null); // Loom - decompile error
     }
 
     protected SoundEvent getHurtSound(DamageSource damagesource) {
