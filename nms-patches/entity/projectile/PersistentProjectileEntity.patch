--- a/net/minecraft/entity/projectile/PersistentProjectileEntity.java
+++ b/net/minecraft/entity/projectile/PersistentProjectileEntity.java
@@ -10,12 +10,7 @@
 import net.minecraft.block.BlockState;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.enchantment.Enchantments;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityDimensions;
-import net.minecraft.entity.EntityPose;
-import net.minecraft.entity.EntityType;
-import net.minecraft.entity.LivingEntity;
-import net.minecraft.entity.MovementType;
+import net.minecraft.entity.*;
 import net.minecraft.entity.damage.DamageSource;
 import net.minecraft.entity.data.DataTracker;
 import net.minecraft.entity.data.TrackedData;
@@ -43,6 +38,10 @@
 import net.minecraft.util.shape.VoxelShape;
 import net.minecraft.world.RayTraceContext;
 import net.minecraft.world.World;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.entity.CraftItem;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.player.PlayerPickupArrowEvent;
 
 public abstract class PersistentProjectileEntity extends ProjectileEntity {
 
@@ -50,13 +49,13 @@
     private static final TrackedData<Byte> PIERCE_LEVEL = DataTracker.registerData(PersistentProjectileEntity.class, TrackedDataHandlerRegistry.BYTE);
     @Nullable
     private BlockState inBlockState;
-    protected boolean inGround;
+    public boolean inGround; // Loom - public access
     protected int inGroundTime;
     public PersistentProjectileEntity.PickupPermission pickupType;
     public int shake;
-    private int life;
+    public int life; // Loom - public access
     private double damage;
-    private int punch;
+    public int punch; // Loom - public access
     private SoundEvent sound;
     private IntOpenHashSet piercedEntities;
     private List<Entity> piercingKilledEntities;
@@ -322,7 +321,13 @@
         int k = entity.getFireTicks();
 
         if (this.isOnFire() && !flag) {
-            entity.setOnFireFor(5);
+            // CraftBukkit start
+            EntityCombustByEntityEvent combustEvent = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 5);
+            Bukkit.getPluginManager().callEvent(combustEvent);
+            if (!combustEvent.isCancelled()) {
+                entity.setOnFireFor(combustEvent.getDuration(), false);
+            }
+            // CraftBukkit end
         }
 
         if (entity.damage(damagesource, (float) i)) {
@@ -483,9 +488,25 @@
 
     public void onPlayerCollision(PlayerEntity playerentity) {
         if (!this.world.isClient && (this.inGround || this.isNoClip()) && this.shake <= 0) {
+            // CraftBukkit start
+            ItemStack itemstack = this.asItemStack();
+            if (this.pickupType == PickupPermission.ALLOWED && !itemstack.isEmpty() && playerentity.inventory.canHold(itemstack) > 0) {
+                ItemEntity item = new ItemEntity(this.world, this.getX(), this.getY(), this.getZ(), itemstack);
+                PlayerPickupArrowEvent event = new PlayerPickupArrowEvent((org.bukkit.entity.Player) playerentity.getBukkitEntity(), new CraftItem(this.world.getCraftServer(), this, item), (org.bukkit.entity.AbstractArrow) this.getBukkitEntity());
+                // event.setCancelled(!entityhuman.canPickUpLoot); TODO
+                Bukkit.getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return;
+                }
+                itemstack = item.getStack();
+            }
+
+            // CraftBukkit end
             boolean flag = this.pickupType == PersistentProjectileEntity.PickupPermission.ALLOWED || this.pickupType == PersistentProjectileEntity.PickupPermission.CREATIVE_ONLY && playerentity.abilities.creativeMode || this.isNoClip() && this.getOwner().getUuid() == playerentity.getUuid();
 
-            if (this.pickupType == PersistentProjectileEntity.PickupPermission.ALLOWED && !playerentity.inventory.insertStack(this.asItemStack())) {
+            if (this.pickupType == PersistentProjectileEntity.PickupPermission.ALLOWED && !playerentity.inventory.insertStack(itemstack)) {
+                // CraftBukkit end
                 flag = false;
             }
 
