--- a/net/minecraft/screen/AbstractFurnaceScreenHandler.java
+++ b/net/minecraft/screen/AbstractFurnaceScreenHandler.java
@@ -17,6 +17,8 @@
 import net.minecraft.screen.slot.Slot;
 import net.minecraft.server.network.ServerPlayerEntity;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryFurnace;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public abstract class AbstractFurnaceScreenHandler extends AbstractRecipeScreenHandler<Inventory> {
 
@@ -25,6 +27,22 @@
     protected final World world;
     private final RecipeType<? extends AbstractCookingRecipe> recipeType;
 
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private PlayerInventory player;
+
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventoryFurnace inventory = new CraftInventoryFurnace((AbstractFurnaceBlockEntity) this.inventory);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
+
     protected AbstractFurnaceScreenHandler(ScreenHandlerType<?> screenhandlertype, RecipeType<? extends AbstractCookingRecipe> recipetype, int i, PlayerInventory playerinventory) {
         this(screenhandlertype, recipetype, i, playerinventory, new SimpleInventory(3), new ArrayPropertyDelegate(4));
     }
@@ -40,6 +58,7 @@
         this.addSlot(new Slot(inventory, 0, 56, 17));
         this.addSlot(new FurnaceFuelSlot(this, inventory, 1, 56, 53));
         this.addSlot(new FurnaceOutputSlot(playerinventory.player, inventory, 2, 116, 35));
+        this.player = playerinventory; // CraftBukkit - save player
 
         int j;
 
@@ -68,7 +87,7 @@
     }
 
     public void fillInputSlots(boolean flag, Recipe<?> recipe, ServerPlayerEntity serverplayerentity) {
-        (new FurnaceInputSlotFiller<>(this)).fillInputSlots(serverplayerentity, recipe, flag);
+        (new FurnaceInputSlotFiller(this)).fillInputSlots(serverplayerentity, recipe, flag); // CraftBukkit - decompile error
     }
 
     public boolean matches(Recipe<? super Inventory> recipe) {
@@ -88,6 +107,7 @@
     }
 
     public boolean canUse(PlayerEntity playerentity) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return this.inventory.canPlayerUse(playerentity);
     }
 
@@ -141,8 +161,8 @@
         return itemstack;
     }
 
-    protected boolean isSmeltable(ItemStack itemstack) {
-        return this.world.getRecipeManager().getFirstMatch(this.recipeType, new SimpleInventory(new ItemStack[]{itemstack}), this.world).isPresent();
+    protected boolean isSmeltable(ItemStack itemstack) { // TODO look over this
+        return this.world.getRecipeManager().getFirstMatch((RecipeType<Recipe>) this.recipeType, new SimpleInventory(new ItemStack[]{itemstack}), this.world).isPresent();
     }
 
     protected boolean isFuel(ItemStack itemstack) {
