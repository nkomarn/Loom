--- a/net/minecraft/village/TradeOffer.java
+++ b/net/minecraft/village/TradeOffer.java
@@ -4,19 +4,33 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtHelper;
 import net.minecraft.util.math.MathHelper;
+import org.bukkit.craftbukkit.inventory.CraftMerchantRecipe; // CraftBukkit
 
 public class TradeOffer {
 
-    private final ItemStack firstBuyItem;
-    private final ItemStack secondBuyItem;
-    private final ItemStack sellItem;
-    private int uses;
-    private final int maxUses;
-    private boolean rewardingPlayerExperience;
+    public ItemStack firstBuyItem; // Loom - public access, non-final
+    public ItemStack secondBuyItem; // Loom - public access, non-final
+    public final ItemStack sellItem; // Loom - public access
+    public int uses; // Loom - public access
+    public int maxUses; // Loom - public access, non-final
+    public boolean rewardingPlayerExperience; // Loom - public access
     private int specialPrice;
     private int demandBonus;
-    private float priceMultiplier;
-    private int traderExperience;
+    public float priceMultiplier; // Loom - public access
+    public int traderExperience; // Loom - public access
+
+    // CraftBukkit start
+    private CraftMerchantRecipe bukkitHandle;
+
+    public CraftMerchantRecipe asBukkit() {
+        return (bukkitHandle == null) ? bukkitHandle = new CraftMerchantRecipe(this) : bukkitHandle;
+    }
+
+    public TradeOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, CraftMerchantRecipe bukkit) {
+        this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier);
+        this.bukkitHandle = bukkit;
+    }
+    // CraftBukkit end
 
     public TradeOffer(CompoundTag compoundtag) {
         this.rewardingPlayerExperience = true;
@@ -78,6 +92,7 @@
 
     public ItemStack getAdjustedFirstBuyItem() {
         int i = this.firstBuyItem.getCount();
+        if (i <= 0) return ItemStack.EMPTY; // CraftBukkit - SPIGOT-5476
         ItemStack itemstack = this.firstBuyItem.copy();
         int j = Math.max(0, MathHelper.floor((float) (i * this.demandBonus) * this.priceMultiplier));
 
