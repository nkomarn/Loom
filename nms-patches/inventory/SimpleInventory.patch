--- a/net/minecraft/inventory/SimpleInventory.java
+++ b/net/minecraft/inventory/SimpleInventory.java
@@ -13,13 +13,66 @@
 import net.minecraft.recipe.RecipeInputProvider;
 import net.minecraft.util.collection.DefaultedList;
 
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+// CraftBukkit end
+
 public class SimpleInventory implements Inventory, RecipeInputProvider {
 
     private final int size;
     private final DefaultedList<ItemStack> stacks;
     private List<InventoryChangedListener> listeners;
 
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+    protected org.bukkit.inventory.InventoryHolder bukkitOwner;
+
+    public List<ItemStack> getContents() {
+        return this.stacks;
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    @Override
+    public int getMaxCountPerStack() {
+        return maxStack;
+    }
+
+    @Override
+    public void setMaxCountPerStack(int size) {
+        maxStack = size;
+    }
+
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+        return bukkitOwner;
+    }
+
+    @Override
+    public Location getLocation() {
+        return null;
+    }
+
     public SimpleInventory(int i) {
+        // CraftBukkit begin - split
+        this(i, null);
+    }
+
+    public SimpleInventory(int i, org.bukkit.inventory.InventoryHolder owner) {
+        this.bukkitOwner = owner;
+        // CraftBukkit end
         this.size = i;
         this.stacks = DefaultedList.ofSize(i, ItemStack.EMPTY);
     }
