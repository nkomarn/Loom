--- a/net/minecraft/command/arguments/BlockPredicateArgumentType.java
+++ b/net/minecraft/command/arguments/BlockPredicateArgumentType.java
@@ -90,9 +90,7 @@
         return BlockPredicateArgumentType.EXAMPLES;
     }
 
-    public Object parse(StringReader stringreader) throws CommandSyntaxException {
-        return this.parse(stringreader);
-    }
+    // Loom - decompile errors
 
     static class TagPredicate implements Predicate<CachedBlockPosition> {
 
@@ -123,7 +121,7 @@
                         return false;
                     }
 
-                    Comparable<?> comparable = (Comparable) property.parse((String) entry.getValue()).orElse((Object) null);
+                    Comparable<?> comparable = (Comparable) property.parse((String) entry.getValue()).orElse(null); // Loom - decompile errors
 
                     if (comparable == null) {
                         return false;
@@ -144,9 +142,7 @@
             }
         }
 
-        public boolean test(Object object) {
-            return this.test((CachedBlockPosition) object);
-        }
+        // Loom - decompile errors
 
         TagPredicate(Tag tag, Map map, CompoundTag compoundtag, Object object) {
             this(tag, map, compoundtag);
@@ -192,9 +188,7 @@
             }
         }
 
-        public boolean test(Object object) {
-            return this.test((CachedBlockPosition) object);
-        }
+        // Loom - decompile errors
     }
 
     public interface BlockPredicate {
