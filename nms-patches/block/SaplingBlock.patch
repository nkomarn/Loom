--- a/net/minecraft/block/SaplingBlock.java
+++ b/net/minecraft/block/SaplingBlock.java
@@ -1,5 +1,7 @@
 package net.minecraft.block;
 
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 import net.minecraft.block.sapling.SaplingGenerator;
 import net.minecraft.server.world.ServerWorld;
@@ -10,12 +12,17 @@
 import net.minecraft.util.shape.VoxelShape;
 import net.minecraft.world.BlockView;
 import net.minecraft.world.World;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.event.world.StructureGrowEvent;
 
 public class SaplingBlock extends PlantBlock implements Fertilizable {
 
     public static final IntProperty STAGE = Properties.STAGE;
     protected static final VoxelShape SHAPE = Block.createCuboidShape(2.0D, 0.0D, 2.0D, 14.0D, 12.0D, 14.0D);
     private final SaplingGenerator generator;
+    public static TreeType treeType; // CraftBukkit
 
     protected SaplingBlock(SaplingGenerator saplinggenerator, AbstractBlock.Settings abstractblock_settings) {
         super(abstractblock_settings);
@@ -29,7 +36,32 @@
 
     public void randomTick(BlockState blockstate, ServerWorld serverworld, BlockPos blockpos, Random random) {
         if (serverworld.getLightLevel(blockpos.up()) >= 9 && random.nextInt(7) == 0) {
+            // CraftBukkit start
+            serverworld.captureTreeGeneration = true;
+            // CraftBukkit end
             this.generate(serverworld, blockpos, blockstate, random);
+            // CraftBukkit start
+            worldserver.captureTreeGeneration = false;
+            if (serverworld.capturedBlockStates.size() > 0) {
+                TreeType treeType = SaplingBlock.treeType;
+                SaplingBlock.treeType = null;
+                Location location = new Location(serverworld.getCraftWorld(), blockpos.getX(), blockpos.getY(), blockpos.getZ());
+                List<org.bukkit.block.BlockState> blocks = new ArrayList<>(serverworld.capturedBlockStates.values());
+                serverworld.capturedBlockStates.clear();
+                StructureGrowEvent event = null;
+
+                if (treeType != null) {
+                    event = new StructureGrowEvent(location, treeType, false, null, blocks);
+                    Bukkit.getPluginManager().callEvent(event);
+                }
+
+                if (event == null || !event.isCancelled()) {
+                    for (org.bukkit.block.BlockState state : blocks) {
+                        state.update(true);
+                    }
+                }
+            }
+            // CraftBukkit end
         }
 
     }
