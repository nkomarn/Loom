--- a/net/minecraft/block/dispenser/BoatDispenserBehavior.java
+++ b/net/minecraft/block/dispenser/BoatDispenserBehavior.java
@@ -8,6 +8,9 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Direction;
 import net.minecraft.world.World;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public class BoatDispenserBehavior extends ItemDispenserBehavior {
 
@@ -37,12 +40,40 @@
             d3 = 0.0D;
         }
 
-        BoatEntity boatentity = new BoatEntity(world, d0, d1 + d3, d2);
+        // CraftBukkit start
+        ItemStack itemstack1 = itemstack.split(1);
+        BlockPos blockpos1 = blockpointer.getBlockPos();
+        org.bukkit.block.Block block = world.getCraftWorld().getBlockAt(blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
+        CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+        if (!DispenserBlock.eventFired) {
+            Bukkit.getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled()) {
+            itemstack.increment(1);
+            return itemstack;
+        }
+
+        if (!event.getItem().equals(craftItem)) {
+            itemstack.increment(1);
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            DispenserBehavior idispensebehavior = DispenserBlock.BEHAVIORS.get(eventStack.getItem());
+            if (idispensebehavior != DispenserBehavior.NOOP && idispensebehavior != this) {
+                idispensebehavior.dispense(blockpointer, eventStack);
+                return itemstack;
+            }
+        }
+
+        BoatEntity boatentity = new BoatEntity(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
+        // CraftBukkit end
 
         boatentity.setBoatType(this.boatType);
         boatentity.yaw = direction.asRotation();
-        world.spawnEntity(boatentity);
-        itemstack.decrement(1);
+        //world.spawnEntity(boatentity); // CraftBukkit
+        //itemstack.decrement(1); // CraftBukkit - handled during event processing
         return itemstack;
     }
 
