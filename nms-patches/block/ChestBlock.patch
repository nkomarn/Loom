--- a/net/minecraft/block/ChestBlock.java
+++ b/net/minecraft/block/ChestBlock.java
@@ -72,38 +72,19 @@
             return Optional.empty();
         }
 
-        public Object getFallback() {
-            return this.getFallback();
-        }
-
-        public Object getFrom(Object object) {
+        /*public Object getFrom(Object object) {
             return this.getFrom((ChestBlockEntity) object);
         }
 
         public Object getFromBoth(Object object, Object object1) {
             return this.getFromBoth((ChestBlockEntity) object, (ChestBlockEntity) object1);
-        }
+        }*/ // Loom - decompile error
     };
     private static final DoubleBlockProperties.PropertyRetriever<ChestBlockEntity, Optional<NamedScreenHandlerFactory>> NAME_RETRIEVER = new DoubleBlockProperties.PropertyRetriever<ChestBlockEntity, Optional<NamedScreenHandlerFactory>>() {
         public Optional<NamedScreenHandlerFactory> getFromBoth(final ChestBlockEntity chestblockentity, final ChestBlockEntity chestblockentity1) {
             final DoubleInventory doubleinventory = new DoubleInventory(chestblockentity, chestblockentity1);
 
-            return Optional.of(new NamedScreenHandlerFactory() {
-                @Nullable
-                public ScreenHandler createMenu(int i, PlayerInventory playerinventory, PlayerEntity playerentity) {
-                    if (chestblockentity.checkUnlocked(playerentity) && chestblockentity1.checkUnlocked(playerentity)) {
-                        chestblockentity.checkLootInteraction(playerinventory.player);
-                        chestblockentity1.checkLootInteraction(playerinventory.player);
-                        return GenericContainerScreenHandler.createGeneric9x6(i, playerinventory, doubleinventory);
-                    } else {
-                        return null;
-                    }
-                }
-
-                public Text getDisplayName() {
-                    return (Text) (chestblockentity.hasCustomName() ? chestblockentity.getDisplayName() : (chestblockentity1.hasCustomName() ? chestblockentity1.getDisplayName() : new TranslatableText("container.chestDouble")));
-                }
-            });
+            return Optional.of(new ChestDoubleInventory(chestblockentity, chestblockentity1, doubleinventory)); // CraftBukkit
         }
 
         public Optional<NamedScreenHandlerFactory> getFrom(ChestBlockEntity chestblockentity) {
@@ -114,19 +95,45 @@
             return Optional.empty();
         }
 
-        public Object getFallback() {
-            return this.getFallback();
-        }
-
-        public Object getFrom(Object object) {
+        /*public Object getFrom(Object object) {
             return this.getFrom((ChestBlockEntity) object);
         }
 
         public Object getFromBoth(Object object, Object object1) {
             return this.getFromBoth((ChestBlockEntity) object, (ChestBlockEntity) object1);
-        }
+        }*/ // Loom - decompile error
     };
 
+    // CraftBukkit start
+    public static class ChestDoubleInventory implements NamedScreenHandlerFactory {
+        private final ChestBlockEntity tileentitychest;
+        private final ChestBlockEntity tileentitychest1;
+        public final DoubleInventory inventorylargechest;
+
+        public ChestDoubleInventory(ChestBlockEntity tileentitychest, ChestBlockEntity tileentitychest1, DoubleInventory inventorylargechest) {
+            this.tileentitychest = tileentitychest;
+            this.tileentitychest1 = tileentitychest1;
+            this.inventorylargechest = inventorylargechest;
+        }
+
+        @Nullable
+        @Override
+        public ScreenHandler createMenu(int i, PlayerInventory playerinventory, PlayerEntity entityhuman) {
+            if (tileentitychest.checkUnlocked(entityhuman) && tileentitychest1.checkUnlocked(entityhuman)) {
+                tileentitychest.checkLootInteraction(playerinventory.player);
+                tileentitychest1.checkLootInteraction(playerinventory.player);
+                return GenericContainerScreenHandler.createGeneric9x6(i, playerinventory, inventorylargechest);
+            } else {
+                return null;
+            }
+        }
+
+        @Override
+        public Text getDisplayName() {
+            return tileentitychest.hasCustomName() ? tileentitychest.getDisplayName() : (tileentitychest1.hasCustomName() ? tileentitychest1.getDisplayName() : new TranslatableText("container.chestDouble"));
+        }
+    }
+
     protected ChestBlock(AbstractBlock.Settings abstractblock_settings, Supplier<BlockEntityType<? extends ChestBlockEntity>> supplier) {
         super(abstractblock_settings, supplier);
         this.setDefaultState((BlockState) ((BlockState) ((BlockState) ((BlockState) this.stateManager.getDefaultState()).with(ChestBlock.FACING, Direction.NORTH)).with(ChestBlock.CHEST_TYPE, ChestType.SINGLE)).with(ChestBlock.WATERLOGGED, false));
@@ -272,7 +279,7 @@
     }
 
     public DoubleBlockProperties.PropertySource<? extends ChestBlockEntity> a(BlockState blockstate, World world, BlockPos blockpos, boolean flag) {
-        BiPredicate bipredicate;
+        BiPredicate<WorldAccess, BlockPos> bipredicate; // CraftBukkit - decompile error
 
         if (flag) {
             bipredicate = (worldaccess, blockpos1) -> {
