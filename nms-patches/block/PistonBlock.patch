--- a/net/minecraft/block/PistonBlock.java
+++ b/net/minecraft/block/PistonBlock.java
@@ -1,7 +1,10 @@
 package net.minecraft.block;
 
+import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
+
+import java.util.AbstractList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -30,6 +33,11 @@
 import net.minecraft.util.shape.VoxelShapes;
 import net.minecraft.world.BlockView;
 import net.minecraft.world.World;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockPistonEvent;
+import org.bukkit.event.block.BlockPistonExtendEvent;
+import org.bukkit.event.block.BlockPistonRetractEvent;
 
 public class PistonBlock extends FacingBlock {
 
@@ -122,6 +130,18 @@
                 }
             }
 
+            // CraftBukkit start
+            if (!this.sticky) {
+                org.bukkit.block.Block block = world.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+                BlockPistonRetractEvent event = new BlockPistonRetractEvent(block, ImmutableList.<org.bukkit.block.Block>of(), CraftBlock.notchToBlockFace(direction));
+                Bukkit.getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return;
+                }
+            }
+            // PAIL: checkME - what happened to setTypeAndData?
+            // CraftBukkit end
             world.addSyncedBlockEvent(blockpos, this, b0, direction.getId());
         }
 
@@ -295,6 +315,49 @@
             BlockState[] ablockstate = new BlockState[list.size() + list2.size()];
             Direction direction1 = flag ? direction : direction.getOpposite();
             int j = 0;
+            // CraftBukkit start
+            final org.bukkit.block.Block bblock = world.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+            final List<BlockPos> moved = pistonhandler.getMovedBlocks();
+            final List<BlockPos> broken = pistonhandler.getBrokenBlocks();
+
+            List<org.bukkit.block.Block> blocks = new AbstractList<org.bukkit.block.Block>() {
+                @Override
+                public int size() {
+                    return moved.size() + broken.size();
+                }
+
+                @Override
+                public org.bukkit.block.Block get(int index) {
+                    if (index >= size() || index < 0) {
+                        throw new ArrayIndexOutOfBoundsException(index);
+                    }
+
+                    BlockPos pos = (BlockPos) (index < moved.size() ? moved.get(index) : broken.get(index - moved.size()));
+                    return bblock.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+                }
+            };
+
+            BlockPistonEvent event;
+            if (flag) {
+                event = new BlockPistonExtendEvent(bblock, blocks, CraftBlock.notchToBlockFace(direction1));
+            } else {
+                event = new BlockPistonRetractEvent(bblock, blocks, CraftBlock.notchToBlockFace(direction1));
+            }
+            Bukkit.getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                for (BlockPos b : broken) {
+                    world.updateListeners(b, Blocks.AIR.getDefaultState(), world.getBlockState(b), 3);
+                }
+
+                for (BlockPos b : moved) {
+                    world.updateListeners(b, Blocks.AIR.getDefaultState(), world.getBlockState(b), 3);
+                    b = b.offset(direction1);
+                    world.updateListeners(b, Blocks.AIR.getDefaultState(), world.getBlockState(b), 3);
+                }
+                return false;
+            }
+            // CraftBukkit end
 
             BlockPos blockpos3;
             int k;
