--- a/net/minecraft/block/entity/CampfireBlockEntity.java
+++ b/net/minecraft/block/entity/CampfireBlockEntity.java
@@ -21,12 +21,16 @@
 import net.minecraft.util.math.Direction;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.World;
+// CraftBukkit start
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockCookEvent;
+// CraftBukkit end
 
 public class CampfireBlockEntity extends BlockEntity implements Clearable, Tickable {
 
     private final DefaultedList<ItemStack> itemsBeingCooked;
-    private final int[] cookingTimes;
-    private final int[] cookingTotalTimes;
+    public final int[] cookingTimes, cookingTotalTimes; // Loom - public access
 
     public CampfireBlockEntity() {
         super(BlockEntityType.CAMPFIRE);
@@ -72,6 +76,21 @@
                     }).orElse(itemstack);
                     BlockPos blockpos = this.getPos();
 
+                    // CraftBukkit start - fire BlockCookEvent
+                    CraftItemStack source = CraftItemStack.asCraftMirror(itemstack);
+                    org.bukkit.inventory.ItemStack result = CraftItemStack.asBukkitCopy(itemstack1);
+
+                    BlockCookEvent blockCookEvent = new BlockCookEvent(CraftBlock.at(this.world, this.pos), source, result);
+                    this.world.getCraftServer().getPluginManager().callEvent(blockCookEvent);
+
+                    if (blockCookEvent.isCancelled()) {
+                        return;
+                    }
+
+                    result = blockCookEvent.getResult();
+                    itemstack1 = CraftItemStack.asNMSCopy(result);
+                    // CraftBukkit end
+
                     ItemScatterer.spawn(this.world, (double) blockpos.getX(), (double) blockpos.getY(), (double) blockpos.getZ(), itemstack1);
                     this.itemsBeingCooked.set(i, ItemStack.EMPTY);
                     this.updateListeners();
