--- a/net/minecraft/block/AbstractButtonBlock.java
+++ b/net/minecraft/block/AbstractButtonBlock.java
@@ -22,6 +22,9 @@
 import net.minecraft.world.BlockView;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldAccess;
+import org.bukkit.Bukkit;
+import org.bukkit.event.block.BlockRedstoneEvent;
+import org.bukkit.event.entity.EntityInteractEvent;
 
 public abstract class AbstractButtonBlock extends WallMountedBlock {
 
@@ -87,6 +90,19 @@
         if ((Boolean) blockstate.get(AbstractButtonBlock.POWERED)) {
             return ActionResult.CONSUME;
         } else {
+            // CraftBukkit start
+            boolean powered = blockstate.get(POWERED);
+            org.bukkit.block.Block block = world.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+            int old = (powered) ? 15 : 0;
+            int current = (!powered) ? 15 : 0;
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, old, current);
+            Bukkit.getPluginManager().callEvent(eventRedstone);
+
+            if ((eventRedstone.getNewCurrent() > 0) == (powered)) {
+                return ActionResult.SUCCESS;
+            }
+            // CraftBukkit end
             this.powerOn(blockstate, world, blockpos);
             this.playClickSound(playerentity, world, blockpos, true);
             return ActionResult.success(world.isClient);
@@ -132,6 +148,16 @@
             if (this.wooden) {
                 this.tryPowerWithProjectiles(blockstate, serverworld, blockpos);
             } else {
+                // CraftBukkit start
+                org.bukkit.block.Block block = serverworld.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+
+                BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, 15, 0);
+                Bukkit.getPluginManager().callEvent(eventRedstone);
+
+                if (eventRedstone.getNewCurrent() > 0) {
+                    return;
+                }
+                // CraftBukkit end
                 serverworld.setBlockState(blockpos, (BlockState) blockstate.with(AbstractButtonBlock.POWERED, false), 3);
                 this.updateNeighbors(blockstate, serverworld, blockpos);
                 this.playClickSound((PlayerEntity) null, serverworld, blockpos, false);
@@ -151,7 +177,44 @@
         boolean flag = !list.isEmpty();
         boolean flag1 = (Boolean) blockstate.get(AbstractButtonBlock.POWERED);
 
+        // CraftBukkit start - Call interact event when arrows turn on wooden buttons
+        if (flag1 != flag && flag) {
+            org.bukkit.block.Block block = world.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+            boolean allowed = false;
+
+            // If all of the events are cancelled block the button press, else allow
+            for (Object object : list) {
+                if (object != null) {
+                    EntityInteractEvent event = new EntityInteractEvent(((Entity) object).getBukkitEntity(), block);
+                    Bukkit.getPluginManager().callEvent(event);
+
+                    if (!event.isCancelled()) {
+                        allowed = true;
+                        break;
+                    }
+                }
+            }
+
+            if (!allowed) {
+                return;
+            }
+        }
+        // CraftBukkit end
+
         if (flag != flag1) {
+            // CraftBukkit start
+            boolean powered = flag1;
+            org.bukkit.block.Block block = world.getCraftWorld().getBlockAt(blockpos.getX(), blockpos.getY(), blockpos.getZ());
+            int old = (powered) ? 15 : 0;
+            int current = (!powered) ? 15 : 0;
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, old, current);
+            Bukkit.getPluginManager().callEvent(eventRedstone);
+
+            if ((flag && eventRedstone.getNewCurrent() <= 0) || (!flag && eventRedstone.getNewCurrent() > 0)) {
+                return;
+            }
+            // CraftBukkit end
             world.setBlockState(blockpos, (BlockState) blockstate.with(AbstractButtonBlock.POWERED, flag), 3);
             this.updateNeighbors(blockstate, world, blockpos);
             this.playClickSound((PlayerEntity) null, world, blockpos, flag);
